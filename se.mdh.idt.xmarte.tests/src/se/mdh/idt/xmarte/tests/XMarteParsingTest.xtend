/*
 * generated by Xtext 2.10.0
 */
package se.mdh.idt.xmarte.tests

import com.google.inject.Inject
import org.eclipse.uml2.uml.Model
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith

import static extension org.junit.Assert.assertNotNull

/************************************
 * TODO - Split Tests *
 ************************************/
@RunWith(XtextRunner)
@InjectWith(XMarteInjectorProvider)
class XMarteParsingTest {

	@Inject extension ParseHelper<Model>

	@Test def void testParseModel() {
		'''
			model aModel {
				
				component aComponent {}
				allocated component bComponent {}
				allocated component cComponent {
					kind = application
				}
				
				processor component aProcessor {}
				processor component bProcessor {
					cores = 2
				}
				allocated processor component cProcessor {}
				allocated processor component dProcessor {
					kind = executionPlatform
					cores = 2
				}
				allocated processor component eProcessor {
					kind = both
					cores = 10
					component subComponent {}
				}
				allocated processor component fProcessor {
					kind = undef
					cores = 100
					allocated component subComponent {}
				}
				allocated processor component fProcessor {
					kind = application
					cores = 5
					allocated component subComponent {
						kind = application
					}
				}
				allocated processor component gProcessor {
					kind = executionPlatform
					cores = 1
					allocated cache component subComponent {
						kind = application
						level = 1
				}
			}
		'''.parse => [assertNotNull]
	}

}
